$date
	Sat May 23 17:30:51 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module gate_and $end
$var wire 1 ! e1 $end
$var wire 1 " e2 $end
$var wire 1 # s $end
$upscope $end
$scope module gate_nor $end
$var wire 1 $ e1 $end
$var wire 1 % e2 $end
$var wire 1 & s $end
$upscope $end
$scope module gate_or $end
$var wire 1 ' e1 $end
$var wire 1 ( e2 $end
$var wire 1 ) s $end
$upscope $end
$scope module gate_xor $end
$var wire 1 * e1 $end
$var wire 1 + e2 $end
$var wire 1 , s $end
$upscope $end
$scope module test_basculeD $end
$var wire 1 - s2 $end
$var wire 1 . s1 $end
$var reg 1 / a $end
$var reg 1 0 clk $end
$scope module test_basculeD $end
$var wire 1 / a $end
$var wire 1 0 clk $end
$var wire 1 - s2 $end
$var wire 1 . s1 $end
$var wire 5 1 line [4:0] $end
$scope module nand1 $end
$var wire 1 / e1 $end
$var wire 1 0 e2 $end
$var wire 1 2 s $end
$upscope $end
$scope module nand2 $end
$var wire 1 3 e1 $end
$var wire 1 0 e2 $end
$var wire 1 4 s $end
$upscope $end
$scope module nand3 $end
$var wire 1 5 e1 $end
$var wire 1 6 e2 $end
$var wire 1 7 s $end
$upscope $end
$scope module nand4 $end
$var wire 1 8 e1 $end
$var wire 1 9 e2 $end
$var wire 1 : s $end
$upscope $end
$scope module not1 $end
$var wire 1 / e1 $end
$var wire 1 ; s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1;
x:
x9
18
x7
x6
15
14
13
12
bx111 1
00
0/
x.
x-
x,
z+
z*
x)
z(
z'
x&
z%
z$
x#
z"
z!
$end
#5
03
bx101 1
0;
1/
#10
0.
09
07
1-
16
1:
08
04
13
b10011 1
1;
10
0/
#15
0-
06
0:
1.
19
18
17
14
05
03
02
b1100 1
0;
1/
#20
15
13
12
b1111 1
1;
00
0/
#25
03
b1101 1
0;
1/
#30
0.
09
07
1-
16
1:
08
04
13
b10011 1
1;
10
0/
#35
0-
06
0:
1.
19
18
17
14
05
03
02
b1100 1
0;
1/
