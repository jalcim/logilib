$date
	Sun May 24 04:56:26 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module gate_and $end
$var wire 1 ! e1 $end
$var wire 1 " e2 $end
$var wire 1 # s $end
$upscope $end
$scope module gate_and4 $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 & c $end
$var wire 1 ' d $end
$var wire 1 ( s $end
$upscope $end
$scope module gate_and5 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + c $end
$var wire 1 , d $end
$var wire 1 - e $end
$var wire 1 . s $end
$upscope $end
$scope module gate_nand $end
$var wire 1 / e1 $end
$var wire 1 0 e2 $end
$var wire 1 1 s $end
$upscope $end
$scope module gate_nor $end
$var wire 1 2 e1 $end
$var wire 1 3 e2 $end
$var wire 1 4 s $end
$upscope $end
$scope module gate_or $end
$var wire 1 5 e1 $end
$var wire 1 6 e2 $end
$var wire 1 7 s $end
$upscope $end
$scope module gate_xor $end
$var wire 1 8 e1 $end
$var wire 1 9 e2 $end
$var wire 1 : s $end
$upscope $end
$scope module multigate_and8 $end
$var wire 8 ; bus [7:0] $end
$var wire 1 < s $end
$upscope $end
$scope module multigate_or16 $end
$var wire 16 = bus [15:0] $end
$var wire 1 > s $end
$upscope $end
$scope module testmux $end
$var wire 1 ? s $end
$var reg 1 @ a $end
$var reg 1 A b $end
$var reg 1 B c $end
$var reg 1 C d $end
$var reg 2 D s0 [1:0] $end
$scope module mux1 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 B c $end
$var wire 1 C d $end
$var wire 2 E s0 [1:0] $end
$var wire 1 ? s $end
$var wire 4 F line2 [3:0] $end
$var wire 4 G line [3:0] $end
$scope module and1 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 @ c $end
$var wire 1 J s $end
$upscope $end
$scope module and2 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 A c $end
$var wire 1 M s $end
$upscope $end
$scope module and3 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 B c $end
$var wire 1 P s $end
$upscope $end
$scope module and4 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 C c $end
$var wire 1 S s $end
$upscope $end
$scope module not1 $end
$var wire 1 T e1 $end
$var wire 1 U s $end
$upscope $end
$scope module not2 $end
$var wire 1 V e1 $end
$var wire 1 W s $end
$upscope $end
$scope module or1 $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z c $end
$var wire 1 [ d $end
$var wire 1 ? s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0[
0Z
0Y
1X
1W
0V
1U
0T
0S
0R
0Q
0P
1O
0N
0M
0L
1K
1J
1I
1H
b11 G
b1 F
b0 E
b0 D
1C
1B
1A
1@
1?
x>
bz =
x<
bz ;
x:
z9
z8
x7
z6
z5
x4
z3
z2
x1
z0
z/
x.
z-
z,
z+
z*
z)
x(
z'
z&
z%
z$
x#
z"
z!
$end
#5
0X
1Y
0J
b10 F
1M
0I
0O
1L
1R
0U
b110 G
1T
b1 D
b1 E
#10
0Y
1Z
0M
b100 F
1P
1I
1O
0H
0K
0L
0R
1N
1Q
1U
0W
b1001 G
0T
1V
b10 D
b10 E
#15
0Z
1[
0P
b1000 F
1S
0I
0O
1L
1R
0U
b1100 G
1T
b11 D
b11 E
#20
